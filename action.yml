name: 'Tlx Continuous Integration'
description: 'Tlx Continuous Integration flow'
inputs:
  project-root-account:
    description: 'Project repo root account name'
    required: false
    default: 'trustlogix'
  project-name:
    description: 'Project repo name'
    required: true
  project-dir:
    description: 'Project dir'
    required: false
  project-package-dir:
    description: 'Project package dir'
    required: false
  project-type:
    description: 'Project type'
    required: true
    default: 'mvn'
  project-artifact:
    description: 'Project artifact path'
    required: true
  project-artifact-name:
    description: 'Project artifact name'
    required: false
  project-branch:
    description: 'Project repo branch'
    required: false
    default: 'develop'
  build-command:
    description: 'Project build command'
    required: false
  publish-docker-build-args:
    description: 'Publishing docker build arguments'
    required: false
  git-user-name:
    description: 'Git commit user name'
    required: false
    default: 'jmunta-tlx'
  git-user-email:
    description: 'Git commit user email'
    required: false
    default: 'jmunta@trustlogix.io'
  project-steps:
    description: 'Project steps: start_sonarqube create_sonarqube_project build start_sonarscan stop_sonarscan generate_sonarqube_report stop_sonarqube store_artifacts push_docker_image'
    required: true
    default: 'all'
outputs:
  artifact:
    description: "artifact"
    value: ${{ steps.project-ci.outputs.artifact-location }}
  image-tag:
    description: "image tag built"
    value: ${{ steps.project-ci.outputs.image-tag }}
runs:
  using: "composite"
  steps:
    - id: project-ci
      run: ARTIFACT_NAME=${{ inputs.project-artifact-name }} BUILD_COMMAND=${{ inputs.build-command }} PROJECT=${{ inputs.project-name }} PROJECT_ROOT_ACCOUNT=${{ inputs.project-root-account }} PROJECT_BRANCH=${{ inputs.project-branch }} PROJECT_DIR=${{ inputs.project-dir }} PROJECT_PACKAGE_DIR=${{ inputs.project-package-dir }} PROJECT_TYPE=${{ inputs.project-type }} ARTIFACT_PATH=${{ inputs.project-artifact }} GIT_USER_NAME=${{ inputs.git-user-name }} GIT_USER_EMAIL=${{ inputs.git-user-email }} ${{ github.action_path }}/ci-flow.sh ${{ inputs.project-steps }}
      shell: bash
    
    
